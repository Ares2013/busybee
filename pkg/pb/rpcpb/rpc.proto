syntax = "proto3";
package rpcpb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/deepfabric/busybee/pkg/pb/metapb/meta.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_enum_prefix_all) = false;

enum Type {
    Set           = 0;
    Get           = 1;
    Delete        = 2;
    Scan          = 3;
   
    BMCreate      = 100;
    BMAdd         = 101;
    BMRemove      = 102;
    BMClear       = 103;
    BMContains    = 104;
    BMCount       = 105;
    BMRange       = 106;

    StartingInstance         = 200;
    StartedInstance          = 201;
    StopInstance             = 202;
    CreateInstanceStateShard = 203;
    UpdateInstanceStateShard = 204;
    RemoveInstanceStateShard = 205;
    InstanceCountState       = 206;
    InstanceCrowdState       = 207;

    QueueAdd      = 300;
    QueueFetch    = 301;

    TenantInit    = 400;
    UpdateMapping = 401;
    GetMapping    = 402;
    UpdateProfile = 403;
    GetProfile    = 404;
    AddEvent      = 405;
    FetchNotify   = 406;

    AllocID       = 501;
    ResetID       = 502;
}

// Request the busybee request
message Request {
    uint64                    id            = 1  [(gogoproto.customname) = "ID"];
    Type                      type          = 2;
    SetRequest                set           = 3  [(gogoproto.nullable) = false];
    GetRequest                get           = 4  [(gogoproto.nullable) = false];
    DeleteRequest             delete        = 5  [(gogoproto.nullable) = false];
    BMCreateRequest           bmCreate      = 6  [(gogoproto.nullable) = false];
    BMAddRequest              bmAdd         = 7  [(gogoproto.nullable) = false];
    BMRemoveRequest           bmRemove      = 8  [(gogoproto.nullable) = false];
    BMClearRequest            bmClear       = 9  [(gogoproto.nullable) = false];
    BMRangeRequest            bmRange       = 10 [(gogoproto.nullable) = false];
    BMCountRequest            bmCount       = 11 [(gogoproto.nullable) = false];
    BMContainsRequest         bmContains    = 12 [(gogoproto.nullable) = false];
    TenantInitRequest         tenantInit    = 13 [(gogoproto.nullable) = false];
    StartingInstanceRequest   startInstance = 14 [(gogoproto.nullable) = false];
    StopInstanceRequest       stopInstance  = 15 [(gogoproto.nullable) = false];
    InstanceCountStateRequest countInstance = 16 [(gogoproto.nullable) = false];
    InstanceCrowdStateRequest crowdInstance = 17 [(gogoproto.nullable) = false];
    UpdateMappingRequest      updateMapping = 18 [(gogoproto.nullable) = false];
    GetMappingRequest         getMapping    = 19 [(gogoproto.nullable) = false];
    UpdateProfileRequest      updateProfile = 20 [(gogoproto.nullable) = false];
    GetProfileRequest         getProfile    = 21 [(gogoproto.nullable) = false];
    AddEventRequest           addEvent      = 22 [(gogoproto.nullable) = false];
    FetchNotifyRequest        fetchNotify   = 23 [(gogoproto.nullable) = false];
    AllocIDRequest            allocID       = 24 [(gogoproto.nullable) = false];
    ResetIDRequest            resetID       = 25 [(gogoproto.nullable) = false];
    ScanRequest               scan          = 26 [(gogoproto.nullable) = false];
}

// Response the busybee response
message Response {
    uint64              id              = 1  [(gogoproto.customname) = "ID"];
    Type                type            = 2;
    ErrorResponse       error           = 3  [(gogoproto.nullable) = false];
    BytesResponse       bytesResp       = 4  [(gogoproto.nullable) = false];
    BoolResponse        boolResp        = 5  [(gogoproto.nullable) = false];
    Uint64Response      uint64Resp      = 6  [(gogoproto.nullable) = false];
    Uint32Response      uint32Resp      = 7  [(gogoproto.nullable) = false];
    Uint32RangeResponse uint32RangeResp = 8  [(gogoproto.nullable) = false];
    Uint32SliceResponse uint32SliceResp = 9  [(gogoproto.nullable) = false];
    BytesSliceResponse  bytesSliceResp  = 10 [(gogoproto.nullable) = false];
    StringResponse      stringResp      = 11 [(gogoproto.nullable) = false];
}

// SetRequest set a key value pair
message SetRequest {
    bytes  key   = 1;
    bytes  value = 2;
}

// GetRequest get value by key
message GetRequest {
    bytes key = 1;
}

// DeleteRequest remove a key value pair
message DeleteRequest {
    bytes key = 1;
}

// BMCreateRequest create a bitmap
message BMCreateRequest {
    bytes           key   = 1;
    repeated uint32 value = 2;
}

// BMAddRequest add some uint64 to a bitmap
message BMAddRequest {
    bytes           key   = 1;
    repeated uint32 value = 2;
}

// BMRemoveRequest remove some uint64 from a bitmap
message BMRemoveRequest {
    bytes           key   = 1;
    repeated uint32 value = 2;
}

// BMClearRequest clear a bitmap
message BMClearRequest {
    bytes           key   = 1;
}

// BMContainsRequest check some uint64 is in a bitmap
message BMContainsRequest {
    bytes           key   = 1;
    repeated uint32 value = 2;
}

// BMCountRequest returns the count of a bitmap
message BMCountRequest {
    bytes key = 1;
}

// BMRangeRequest returns the limit uint64s that that >= start of a bitmap
message BMRangeRequest {
    bytes           key   = 1;
    uint32          start = 2;
    uint64          limit = 3;
}

// StartingInstanceRequest start a workflow
message StartingInstanceRequest {
    metapb.WorkflowInstance instance  = 1 [(gogoproto.nullable) = false];
}

// StartedInstanceRequest remove a workflow
message StartedInstanceRequest {
    uint64 workflowID = 1;
}

// StopInstanceRequest remove a workflow
message StopInstanceRequest {
    uint64 workflowID = 1;
}

// CreateInstanceStateShardRequest create a instance state
message CreateInstanceStateShardRequest {
    metapb.WorkflowInstanceState state = 1 [(gogoproto.nullable) = false];
}

// UpdateInstanceStateShardRequest update a instance state
message UpdateInstanceStateShardRequest {
    metapb.WorkflowInstanceState state = 1 [(gogoproto.nullable) = false];
}

// RemoveInstanceStateShardRequest remove a instance state
message RemoveInstanceStateShardRequest {
    uint64 workflowID = 1;
    uint32 start      = 2;
    uint32 end        = 3;
}

// InstanceCountStateRequest instance count state
message InstanceCountStateRequest {
    uint64 workflowID = 1;
}

// InstanceCrowdStateRequest instance crowd state
message InstanceCrowdStateRequest {
    uint64 workflowID = 1;
    string name       = 2;
}

// QueueAddRequest add items into a queue
message QueueAddRequest {
    bytes          key   = 1;
    repeated bytes items = 2;
}

// QueueFetchResponse add items into a queue
message QueueFetchRequest {
    bytes  key         = 1;
    bytes  consumer    = 2;
    uint64 afterOffset = 3;
    uint64 count       = 4;
}

// TenantInitRequest init tenant
message TenantInitRequest {
    uint64 id                   = 1 [(gogoproto.customname) = "ID"];
    uint64 inputQueuePartitions = 2;
}

// UpdateMappingRequest update id mapping request
message UpdateMappingRequest {
    uint64                  id     = 1 [(gogoproto.customname) = "ID"];
    repeated metapb.IDValue values = 2 [(gogoproto.nullable) = false];
}

// GetMappingRequest get id mapping request
message GetMappingRequest {
    uint64           id   = 1 [(gogoproto.customname) = "ID"];
    metapb.IDValue   from = 2 [(gogoproto.nullable) = false];
    uint32           to   = 3;
}

// UpdateProfileRequest update profile request
message UpdateProfileRequest {
    uint64 id     = 1 [(gogoproto.customname) = "ID"];
    uint32 userID = 2;
    bytes  value  = 3;
}

// GetProfileRequest get profile request
message GetProfileRequest {
    uint64 id     = 1 [(gogoproto.customname) = "ID"];
    uint32 userID = 2;
    string field  = 3;
}

// AddEventRequest add event
message AddEventRequest {
    metapb.Event event = 1 [(gogoproto.nullable) = false];
}

// FetchNotifyRequest fetch notify request
message FetchNotifyRequest {
    uint64 id       = 1 [(gogoproto.customname) = "ID"];
    uint64 after    = 2;
    uint64 count    = 3;
    string consumer = 4;
}

// AllocIDRequest alloc id request
message AllocIDRequest {
    bytes  key   = 1;
    uint64 batch = 2; 
}

// ResetIDRequest reset alloc id request
message ResetIDRequest {
    bytes  key       = 1;
    uint64 startWith = 2;
}

// ScanRequest scan request
message ScanRequest {
    bytes  start = 1;
    bytes  end   = 2;
    uint64 limit = 3;
}

// ErrorResponse error response 
message ErrorResponse {
    string error = 1;
}

// EmptyResponse empty response
message EmptyResponse {

}

// StringResponse response
message StringResponse {
    string value = 1;
}

// BytesResponse response
message BytesResponse {
    bytes value = 1;
}

// BoolResponse response
message BoolResponse {
    bool  value = 1;
}

// Uint64Response response
message Uint64Response {
    uint64 value = 1;
}

// Uint32SliceResponse response
message Uint32SliceResponse {
    repeated uint32 values = 1;
}

// BytesSliceResponse response
message BytesSliceResponse {
    repeated bytes values     = 1;
    uint64         lastValue  = 2;
}

// Uint32Response uint32 response
message Uint32Response {
    uint32 value = 1;
}

// Uint32RangeResponse uint32 range response
message Uint32RangeResponse {
    uint64 from = 1;
    uint64 to   = 2;
}